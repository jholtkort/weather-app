{"version":3,"sources":["components/apis/openweather.js","components/SearchBar.js","components/App.js","index.js"],"names":["axios","create","baseURL","params","appid","SearchBar","state","location","onLocationChange","event","_this","setState","target","value","onFormSubmit","preventDefault","props","react_default","a","createElement","className","onSubmit","this","htmlFor","type","id","placeholder","onChange","Component","App","weather","_callee","zip","response","regenerator_default","wrap","_context","prev","next","openweather","get","sent","stop","renderWeather","data","temp","Math","floor","main","name","description","backgroundClass","toLowerCase","components_SearchBar","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"iQAYeA,WAAMC,OAAO,CAC1BC,QAAS,iCACTC,OAAQ,CACNC,MAbQ,sCCqCGC,oNApCbC,MAAQ,CAAEC,SAAU,MAEpBC,iBAAmB,SAAAC,GACjBC,EAAKC,SAAS,CAAEJ,SAAUE,EAAMG,OAAOC,WAGzCC,aAAe,SAAAL,GACbA,EAAMM,iBAENL,EAAKM,MAAMF,aAAaJ,EAAKJ,MAAMC,mFAInC,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAME,SAAUC,KAAKR,cACnBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,yBACbN,EAAAC,EAAAC,cAAA,gEAEFF,EAAAC,EAAAC,cAAA,SACEK,KAAK,OACLJ,UAAU,eACVK,GAAG,wBACHC,YAAY,QACZb,MAAOS,KAAKhB,MAAMC,SAClBoB,SAAUL,KAAKd,oBAGnBS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,mBA9BcQ,cC6DTC,6MAxDbvB,MAAQ,CAAEwB,QAAS,MAEnBhB,mDAAe,SAAAiB,EAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAhB,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUC,EAAYC,IAAI,oBAAqB,CAC1DrC,OAAQ,CACN6B,IAAKA,KAHI,OACPC,EADOG,EAAAK,KAOb/B,EAAKC,SAAS,CAAEmB,QAASG,IAPZ,wBAAAG,EAAAM,SAAAX,8DAafY,cAAgB,WAAM,IACZC,EAASlC,EAAKJ,MAAMwB,QAApBc,KAER,GAAIA,EAAM,CACR,IAAMC,EAAOC,KAAKC,MAAM,KAACH,EAAKI,KAAKH,KAAO,KAAiB,IAI3D,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACbH,EAAAC,EAAAC,cAAA,qCAA6ByB,EAAKK,MAClChC,EAAAC,EAAAC,cAAA,gCAAwB0B,EAAxB,UACA5B,EAAAC,EAAAC,cAAA,iCAAyByB,EAAKd,QAAQ,GAAGoB,mBAOnDC,gBAAkB,WAChB,OAAKzC,EAAKJ,MAAMwB,QAAQc,KAGflC,EAAKJ,MAAMwB,QAAQc,KAAKd,QAAQ,GAAGkB,KAAKI,cAFxC,4EAOT,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,KAAK6B,mBACnBlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,eACAH,EAAAC,EAAAC,cAACkC,EAAD,CAAWvC,aAAcQ,KAAKR,eAC7BQ,KAAKqB,yBAlDEf,aCDlB0B,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b8c61420.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst KEY = \"11b5fe4b97c7ea5b11013a5a7f4fbcb3\";\n\n// let baseURL = \"\";\n\n// if (location.protocol === \"http:\") {\n//   baseURL = \"http://api.openweathermap.org\";\n// } else {\n//   baseURL = \"https://api.openweathermap.org\";\n// }\n\nexport default axios.create({\n  baseURL: \"https://api.openweathermap.org\",\n  params: {\n    appid: KEY\n  }\n});\n","import React, { Component } from \"react\";\n\nclass SearchBar extends Component {\n  state = { location: \"\" };\n\n  onLocationChange = event => {\n    this.setState({ location: event.target.value });\n  };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n\n    this.props.onFormSubmit(this.state.location);\n  };\n\n  render() {\n    return (\n      <div className=\"mt-5\">\n        <form onSubmit={this.onFormSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput\">\n              <h3>Enter your zip code to get weather for your area:</h3>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput\"\n              placeholder=\"12345\"\n              value={this.state.location}\n              onChange={this.onLocationChange}\n            />\n          </div>\n          <button className=\"btn btn-primary\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport openweather from \"../components/apis/openweather\";\n\nimport \"./App.css\";\nimport SearchBar from \"./SearchBar\";\n\nclass App extends Component {\n  state = { weather: {} };\n\n  onFormSubmit = async zip => {\n    const response = await openweather.get(\"/data/2.5/weather\", {\n      params: {\n        zip: zip\n      }\n    });\n\n    this.setState({ weather: response });\n\n    // console.log(this.state.weather.data);\n    // console.log(this.state.weather);\n  };\n\n  renderWeather = () => {\n    const { data } = this.state.weather;\n\n    if (data) {\n      const temp = Math.floor((data.main.temp - 273) * (9 / 5) + 32);\n      // console.log(data.weather[0]);\n      // console.log(data.weather[0].description);\n\n      return (\n        <div className=\"row mt-5\">\n          <div className=\"col-9 justify-content-center text-align-center\">\n            <h2>Here's the weather for: {data.name}</h2>\n            <h2>The temperature is {temp} &deg;F</h2>\n            <h2>Currently, there is {data.weather[0].description}</h2>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  backgroundClass = () => {\n    if (!this.state.weather.data) {\n      return \"\";\n    } else {\n      return this.state.weather.data.weather[0].main.toLowerCase();\n    }\n  };\n\n  render() {\n    return (\n      <div className={this.backgroundClass()}>\n        <div className=\"container my-5 py-5 main\">\n          <h1 className=\"text-center\">Weather App</h1>\n          <SearchBar onFormSubmit={this.onFormSubmit} />\n          {this.renderWeather()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}